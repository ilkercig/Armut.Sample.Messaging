// <auto-generated />
using Armut.Sample.Messaging.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Armut.Sample.Messaging.Migrations
{
    [DbContext(typeof(MessagingContext))]
    partial class MessagingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Armut.Sample.Messaging.Model.Blocking", b =>
                {
                    b.Property<int>("BlockerId");

                    b.Property<int>("UnWantedId");

                    b.HasKey("BlockerId", "UnWantedId");

                    b.HasIndex("BlockerId");

                    b.HasIndex("UnWantedId");

                    b.ToTable("Blocking");
                });

            modelBuilder.Entity("Armut.Sample.Messaging.Model.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<bool>("Read")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ReceiveTime");

                    b.Property<int>("ReceiverId");

                    b.Property<int>("SenderId");

                    b.Property<DateTime>("SentTime");

                    b.HasKey("MessageID");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Armut.Sample.Messaging.Model.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("UserID");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("Armut.Sample.Messaging.Model.Blocking", b =>
                {
                    b.HasOne("Armut.Sample.Messaging.Model.User", "Blocker")
                        .WithMany("BlockedByMe")
                        .HasForeignKey("BlockerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Armut.Sample.Messaging.Model.User", "UnWanted")
                        .WithMany("UnWantsMe")
                        .HasForeignKey("UnWantedId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Armut.Sample.Messaging.Model.Message", b =>
                {
                    b.HasOne("Armut.Sample.Messaging.Model.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Armut.Sample.Messaging.Model.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
